# Plot regions coverage percentage in the spinal cord.
#
# This showcases that any brainglobe atlases should be supported.
#
# Here we're going to quantify the percentage of area of each spinal cord regions
# innervated by axons.
#
# The "area µm^2" measurement for each annotations can be created in QuPath with a pixel
# classifier, using the Measure button.
#
# We're going to consider that the "area µm^2" measurement generated by the pixel
# classifier is an object count.
# `cuisto` computes a density, which is the count in each region divided by its aera.
# Therefore, in  this case, it will be actually the fraction of area covered by fibers
# in a given color.
#
# The data was generated using QuPath with a pixel classifier on toy data.
#
# If you cloned the repository, this example should be ready to run.
#
# Find this script as a notebook in the documentation :
# https://teamncmc.github.io/cuisto/demo_notebooks/fibers_coverage.html

from pathlib import Path

import matplotlib.pyplot as plt
import pandas as pd

import cuisto

# Full path to your configuration file, edited according to your need beforehand
wdir = Path(__file__).parent.parent / "resources"
config_file = wdir / "demo_config_fibers.toml"

# - Files
# not important if only one animal
animal = "animalid1-SC"
# set the full path to the annotations tsv file from QuPath
annotations_file = wdir / "fibers_measurements_annotations.tsv"

# get configuration
cfg = cuisto.config.Config(config_file)
# update configuration file paths (so that this example can self-run)
cfg.files["blacklist"] = wdir / "demo_atlas_blacklist_cord.toml"
cfg.files["fusion"] = wdir / "demo_atlas_fusion_cord.toml"
cfg.get_blacklist()

# read data
df_annotations = pd.read_csv(annotations_file, index_col="Object ID", sep="\t")
df_detections = pd.DataFrame()  # empty DataFrame

# remove annotations that are not brain regions
df_annotations = df_annotations[df_annotations["Classification"] != "Region*"]
df_annotations = df_annotations[df_annotations["ROI"] != "Rectangle"]

# have a look
print(df_annotations.head())

# get distributions per regions, spatial distributions and coordinates
df_regions, dfs_distributions, df_coordinates = cuisto.process.process_animal(
    animal, df_annotations, df_detections, cfg, compute_distributions=False
)

# convert the "density µm^-2" column, which is actually the coverage fraction, to a percentage
df_regions["density µm^-2"] = df_regions["density µm^-2"] * 100

# have a look
print(df_regions.head())

# plot distributions per regions
fig_regions = cuisto.display.plot_regions(df_regions, cfg)
# specify which regions to plot
# fig_regions = hq.display.plot_regions(df_regions, cfg, names_list=["Rh9", "Sr9", "8Sp"])

# save as svg
# fig_regions[0].savefig(r"C:\Users\glegoc\Downloads\nice_figure.svg")

plt.show()
